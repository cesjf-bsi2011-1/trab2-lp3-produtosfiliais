/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.lp3tvc2.app;

import br.lp3tvc2.db.ProdutoDAO;
import br.lp3tvc2.entity.Estoque;
import br.lp3tvc2.entity.EstoquePK;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.derby.impl.tools.sysinfo.Main;

/**
 *
 * @author TÃ¡ssio Auad
 */
public class ListaEstoque extends javax.swing.JFrame {

    private Estoque estoqueItem;

    /**
     * Creates new form ListaEstoque
     */
    public ListaEstoque() {
        initComponents();
        atualizarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableItensEstoque = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        buttonNovo = new javax.swing.JButton();
        buttonDeletar = new javax.swing.JButton();
        buttonAtualizar = new javax.swing.JButton();
        textFieldQuantidade = new javax.swing.JTextField();
        labelQuantidade = new javax.swing.JLabel();
        buttonCancelar = new javax.swing.JButton();
        textFieldProduto = new javax.swing.JTextField();
        labelProduto = new javax.swing.JLabel();
        labelFilial = new javax.swing.JLabel();
        textFieldFilial = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tableItensEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Filial", "Produto", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableItensEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableItensEstoqueMouseReleased(evt);
            }
        });
        tableItensEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableItensEstoqueKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tableItensEstoque);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Produto"));

        buttonNovo.setText("Novo");
        buttonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNovoActionPerformed(evt);
            }
        });

        buttonDeletar.setText("Deletar");
        buttonDeletar.setEnabled(false);
        buttonDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeletarActionPerformed(evt);
            }
        });

        buttonAtualizar.setText("Atualizar");
        buttonAtualizar.setEnabled(false);
        buttonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAtualizarActionPerformed(evt);
            }
        });

        labelQuantidade.setText("Quantidade");

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        textFieldProduto.setBackground(new java.awt.Color(255, 204, 204));
        textFieldProduto.setSelectionColor(new java.awt.Color(255, 0, 0));

        labelProduto.setText("Produto");

        labelFilial.setText("Filial");

        textFieldFilial.setBackground(new java.awt.Color(255, 204, 204));
        textFieldFilial.setSelectionColor(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(buttonNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonAtualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonDeletar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(buttonCancelar))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelQuantidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelFilial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldFilial, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldProduto))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textFieldFilial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelFilial))
                    .addComponent(textFieldProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(labelProduto)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQuantidade))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonNovo)
                    .addComponent(buttonAtualizar)
                    .addComponent(buttonDeletar)
                    .addComponent(buttonCancelar)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        setSize(new java.awt.Dimension(597, 420));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        textFieldFilial.setText("");
        textFieldProduto.setText("");
        textFieldQuantidade.setText("");

        buttonNovo.setEnabled(true);
        buttonAtualizar.setEnabled(false);
        buttonCancelar.setEnabled(true);
        buttonDeletar.setEnabled(false);

        textFieldFilial.setEnabled(true);
        textFieldProduto.setEnabled(true);
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void buttonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNovoActionPerformed
        if (textFieldFilial.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo 'Filial' Ã© obrigatÃ³rio", "Campo obrigatÃ³rio!", JOptionPane.ERROR_MESSAGE);
        } else if (textFieldProduto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo 'Produto' Ã© obrigatÃ³rio", "Campo obrigatÃ³rio!", JOptionPane.ERROR_MESSAGE);
        } else {
            Estoque item = gerarEstoqueItemFromTextField();
            try {
                new ProdutoDAO().begin();
                new ProdutoDAO().insertProduto(item).commit();
            } catch (Exception ex) {
                try {
                    new ProdutoDAO().rollback();
                } catch (Exception ex1) {
                    Logger.getLogger(ListaEstoque.class.getName()).log(Level.SEVERE, null, ex1);
                }
                Logger.getLogger(ListaEstoque.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao inserir item", JOptionPane.ERROR_MESSAGE);
            }
            
            atualizarTabela();
            buttonCancelarActionPerformed(evt);
        }

    }//GEN-LAST:event_buttonNovoActionPerformed

    private void tableItensEstoqueMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItensEstoqueMouseReleased
        fromTabelaToTextField();
    }//GEN-LAST:event_tableItensEstoqueMouseReleased

    private void tableItensEstoqueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableItensEstoqueKeyReleased
        fromTabelaToTextField();
    }//GEN-LAST:event_tableItensEstoqueKeyReleased

    private void buttonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAtualizarActionPerformed
        Estoque item = gerarEstoqueItemFromTextField();
        try {
            new ProdutoDAO().begin();
            new ProdutoDAO().updateProduto(item).commit();
        } catch (Exception ex) {
            try {
                new ProdutoDAO().rollback();
            } catch (Exception ex1) {
                Logger.getLogger(ListaEstoque.class.getName()).log(Level.SEVERE, null, ex1);
            }
            Logger.getLogger(ListaEstoque.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao atualizar item", JOptionPane.ERROR_MESSAGE);
        }

        atualizarTabela();
        buttonCancelarActionPerformed(evt);

    }//GEN-LAST:event_buttonAtualizarActionPerformed

    private void buttonDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeletarActionPerformed
        Estoque item = gerarEstoqueItemFromTextField();
        try {
            new ProdutoDAO().begin();
            new ProdutoDAO().deleteProduto(item).commit();
        } catch (Exception ex) {
            try {
                new ProdutoDAO().rollback();
            } catch (Exception ex1) {
                Logger.getLogger(ListaEstoque.class.getName()).log(Level.SEVERE, null, ex1);
            }
            Logger.getLogger(ListaEstoque.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao excluir item", JOptionPane.ERROR_MESSAGE);
        }

        atualizarTabela();
        buttonCancelarActionPerformed(evt);
    }//GEN-LAST:event_buttonDeletarActionPerformed

    private void fromTabelaToTextField() {
        int linha = tableItensEstoque.getSelectedRow();
        if (linha < 0) {
            return;
        }
        DefaultTableModel tm;
        tm = (DefaultTableModel) tableItensEstoque.getModel();
        textFieldFilial.setText((String) tm.getValueAt(linha, 0));
        textFieldProduto.setText((String) tm.getValueAt(linha, 1));
        textFieldQuantidade.setText((String) tm.getValueAt(linha, 2));

        buttonNovo.setEnabled(false);
        buttonAtualizar.setEnabled(true);
        buttonCancelar.setEnabled(true);
        buttonDeletar.setEnabled(true);

        textFieldFilial.setEnabled(false);
        textFieldProduto.setEnabled(false);
    }

    private Estoque gerarEstoqueItemFromTextField() {
        Estoque item = new Estoque();
        EstoquePK estoquePK = new EstoquePK(textFieldFilial.getText(), textFieldProduto.getText());
        item.setEstoquePK(estoquePK);
        item.setQuantidade(Integer.parseInt(textFieldQuantidade.getText()));

        return item;
    }

    private void atualizarTabela() {
        tableItensEstoque.clearSelection();
        tableItensEstoque.removeAll();

        DefaultTableModel tm = (DefaultTableModel) tableItensEstoque.getModel();
        tm.getDataVector().removeAllElements();

        List<Estoque> estoque = null;
        try {
            estoque = new ProdutoDAO().findAll();
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao atualizar tabela", JOptionPane.ERROR_MESSAGE);
        }

        for (Estoque estoqueItem : estoque) {
            tm.addRow(new Object[]{
                estoqueItem.getEstoquePK().getFilial(),
                estoqueItem.getEstoquePK().getProduto(),
                String.valueOf(estoqueItem.getQuantidade()),});
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAtualizar;
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonDeletar;
    private javax.swing.JButton buttonNovo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelFilial;
    private javax.swing.JLabel labelProduto;
    private javax.swing.JLabel labelQuantidade;
    private javax.swing.JTable tableItensEstoque;
    private javax.swing.JTextField textFieldFilial;
    private javax.swing.JTextField textFieldProduto;
    private javax.swing.JTextField textFieldQuantidade;
    // End of variables declaration//GEN-END:variables
}
